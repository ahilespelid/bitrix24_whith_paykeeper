<? namespace Bitrix\Main\Security\W;$GLOBALS['____334932169']= array(base64_decode('dGltZQ=='),base64_decode('d'.'GltZQ='.'='),base64_decode('an'.'Nvbl9k'.'Z'.'WNvZGU='),base64_decode('YXJyY'.'X'.'lfbWVy'.'Z2'.'U'.'='),base64_decode('am9pbg='.'='),base64_decode(''.'am9pb'.'g='.'='),base64_decode('am'.'9pbg=='),base64_decode(''.'YXJyYX'.'lfcG9w'),base64_decode('YXJy'.'YX'.'lfc2hpZnQ'.'='),base64_decode('YXJ'.'yYXlfc2hpZnQ'.'='),base64_decode('YXJ'.'yYXl'.'fc'.'2hpZn'.'Q'.'='),base64_decode('YXJyYX'.'lf'.'c2hp'.'ZnQ='),base64_decode('Y'.'X'.'Jy'.'YX'.'lfbW'.'VyZ2'.'U'.'='),base64_decode('aXNfY'.'XJyYXk='),base64_decode('Y'.'XJyY'.'XlfbWV'.'y'.'Z2'.'U='),base64_decode(''.'aW5fYXJyYXk='),base64_decode('a'.'W5fYXJyY'.'Xk='),base64_decode('a'.'W5fYXJyYXk='),base64_decode(''.'aW5fYXJyYXk='),base64_decode('aW5fYXJ'.'y'.'Y'.'X'.'k='),base64_decode('dGltZQ'.'='.'='),base64_decode('dGl'.'t'.'ZQ='.'='),base64_decode('YX'.'J'.'yYXlfbWFw'),base64_decode(''.'Z2V'.'0X2xvYWRlZF'.'9l'.'eHRlb'.'nNpb25z'),base64_decode('anN'.'vb'.'l9lbmNv'.'ZGU='),base64_decode('anNvb'.'l9lb'.'mNvZGU='),base64_decode('cG'.'hwdmVyc'.'2'.'lv'.'bg=='),base64_decode(''.'anNvbl9lbmNvZGU='),base64_decode('am9pbg'.'=='));if(!function_exists(__NAMESPACE__.'\\___92244959')){function ___92244959($_1590240242){static $_476371535= false; if($_476371535 == false) $_476371535=array('V1dB'.'TExfTE9DSw==','c'.'2VjdXJp'.'dH'.'k=',''.'Y'.'2FjaGU=','dHRs','REFUQ'.'Q==','ey'.'I=','V1dBTExfT'.'E9'.'DS'.'w==','c2'.'Vj'.'dX'.'Jp'.'dH'.'k=','U0'.'VDVV'.'JJV'.'Fl'.'fV1'.'dBTExf'.'RVhD'.'RVBU'.'SU'.'9O','RkFJT'.'F9DSE'.'VDS0'.'lOR'.'w='.'=','Q'.'2F'.'u'.'IG5vdCBle'.'GVjdXRlIHd'.'3YWxsIHJ1bGV'.'zOiA'.'=','IFRyY'.'WNl'.'OiA=','UkVRVUVTVF9'.'VUk'.'k=','a'.'2V5c'.'w==','dm'.'F'.'s'.'dW'.'Vz','U0VDV'.'VJJVFlf'.'V1dBTExfTU9E'.'S'.'UZZ',''.'Lg==','U0'.'V'.'DVVJJVFl'.'fV1dBT'.'ExfVU5'.'TRVQ=','L'.'g==','U0VDV'.'VJJV'.'Fl'.'fV1dBTE'.'xf'.'RV'.'hJV'.'A==','Lg==','Z'.'2'.'xvYmFs','a2V5cw==','dmFsdWV'.'z','Z2V0',''.'Z2V0','cG9zdA==','cG9z'.'dA='.'=','Y29'.'va2ll','Y29va2ll','cmVxd'.'WV'.'zdA==',''.'cmVxd'.'WV'.'zdA==','Z2xvYm'.'F'.'s','Z2'.'xv'.'Ym'.'F'.'s','bWFp'.'bl9zZW'.'M=','V1dB'.'TExfQ'.'UNU'.'VUFMSV'.'pFX1JVTEVT','dg==',''.'dm'.'Vyc2lvbg==',''.'a'.'Q==','aXNJbn'.'N0YWxsZWQ=','dg='.'=','a'.'W5p','c29ja2'.'V'.'0VG'.'ltZW91dA'.'='.'=','c3'.'Ry'.'Z'.'WFtVGltZW91dA==','K'.'Cc=','Z'.'GF0YQ==','Jyw'.'gJw'.'='.'=','bW'.'9kdWxl','JywgJw='.'=','bW9kd'.'WxlX3Z'.'lcnNpb24=','Jyk'.'=','LC'.'A=','U0VDVVJJVFlfV1dBTE'.'xfR'.'VhDRVB'.'USU9O','bWFp'.'b'.'g==',''.'R'.'kFJTF'.'9SRUZSRVNISU5H','Q2FuIG5vdCByZWZy'.'ZXNo'.'I'.'H'.'d'.'3YW'.'xs'.'IH'.'J1'.'b'.'GVzOiA=','IFRyYWNlOi'.'A'.'=','ZGF0Y'.'Q==',''.'ey'.'I=','LS0'.'tLS1CRUd'.'JT'.'iBQVUJMSUMgS0VZLS0tL'.'S0=','C'.'k1JS'.'UJJakFOQmd'.'rcWhraUc5dzBCQVF'.'FRkFBT'.'0'.'N'.'BUThB'.'TU'.'lJ'.'Q'.'kNnS0N'.'BUUVB'.'cTh'.'RRTBIam1IS'.'lVTdF'.'dWNm'.'4wemEKUlZv'.'THgwMkt6Ym'.'ZyYlM'.'v'.'UD'.'Zz'.'V'.'2F4V'.'Hp3OFNlR1'.'R0YlRDT3JwSGk1UUY'.'2T1J5alo'.'vWHh'.'6L0tMVTFHYm9mOU'.'NaMwo0ejdTa3'.'FVdDY2aWJ'.'Ydk9GQng0'.'ZncvQVBQ'.'U'.'kdEc'.'XR'.'tMG5EM2ZnR'.'3N1M1J'.'lUGd3M'.'jlpO'.'Ct2bTdtd'.'E'.'J'.'LSl'.'V'.'Z'.'bDR'.'yC'.'lZwYjZzZ'.'lpFVDlLRWI'.'2VD'.'FI'.'RF'.'ltR'.'X'.'Zj'.'MWh'.'xL'.'2lpdXl4TH'.'JaW'.'mk1'.'UTZ'.'VZmY0VUV2VE'.'krN'.'jhz'.'c0ZSa'.'1Erb3d'.'U'.'U'.'nk'.'KZ'.'U'.'9JT'.'WJGaE'.'0vVVR'.'tZlZ'.'ZY'.'lR'.'SRnkyb'.'1VROF'.'d'.'Ne'.'mEybko'.'1U2Foe'.'mkxVUtPMWpB'.'alhUUF'.'Jye'.'m'.'M3'.'QW'.'p1NjM5ajF'.'PMA'.'pwcHFmbTV4Z1d'.'sR'.'kFKa'.'0hR'.'VGdi'.'ZGQ'.'1'.'QV'.'d'.'xREZ'.'Ra3Q5SEtr'.'WStUbm'.'ZCTEdWTXZWeVB3VEhO'.'V1F'.'ZQXc0eHB'.'nL3dBClp3SURBUUFCCi0tLS0tRU5E'.'IFBVQkxJQ'.'yBLRVktLS'.'0tLQ==');return base64_decode($_476371535[$_1590240242]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; private static $_3793224= 'https://wwall.bitrix.info/rules.php'; protected $_2048387503= true; public function handle(){ try{  $_743824763= Cache::createInstance(); $_1957768474= false; if($_743824763->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_306723681= $_743824763->getVars(); if($GLOBALS['____334932169'][0]()- $_306723681> round(0+6.6666666666667+6.6666666666667+6.6666666666667)){  $_1077925111= Application::getConnection(); $_1572999710= RuleRecordTable::getTableName(); $_1077925111->truncateTable($_1572999710); RuleRecordTable::cleanCache(); $_743824763->clean(___92244959(0), ___92244959(1));}} elseif($_743824763->startDataCache()){  $_743824763->endDataCache($GLOBALS['____334932169'][1]()); $_1957768474= true;}  $_1034383814= RuleRecordTable::getList([ ___92244959(2) =>[___92244959(3) => round(0+1200+1200+1200)* round(0+6+6+6+6)* round(0+2.3333333333333+2.3333333333333+2.3333333333333)]])->fetchAll(); foreach($_1034383814 as $_1469934365){ $_1776871658= new PublicKeyCipher; $_1044920938= $_1776871658->decrypt($_1469934365[___92244959(4)], static::__1092787086()); if(!str_starts_with($_1044920938, ___92244959(5))){ continue;} $_1073986659= $GLOBALS['____334932169'][2]($_1044920938, true); if(!empty($_1073986659)){ $_1790245522= Rule::make($_1073986659); $_442650243= $this->handleRule($_1790245522); $this->applyHandlingResults($_442650243);}}  if($_1957768474){ $_743824763->clean(___92244959(6), ___92244959(7));}} catch(\Throwable $_1141673979){ $this->logEvent( ___92244959(8), ___92244959(9), ___92244959(10). $_1141673979->getMessage(). ___92244959(11). $_1141673979->getTraceAsString());}}  public function handleRule(Rule $_1790245522): array{ $_442650243=[]; if($_1790245522->matchPath($_SERVER[___92244959(12)])){  $_1091357723= $this->getContextElements($_1790245522->getContext()); foreach($_1091357723 as $_573148759 => &$_643351767){ $_442650243= $GLOBALS['____334932169'][3]($_442650243, $this->recursiveContextKeyHandle($_573148759, $_643351767,[], $_1790245522));}} return $_442650243;}  public function applyHandlingResults(array $_442650243){ $_1091357723= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_442650243 as $_2089814332){ $_643351767=& $_1091357723[$_2089814332->getContextName()]; $_477739706= $_2089814332->getRuleResult(); $_1790245522= $_2089814332->getRule(); if($_477739706 instanceof ModifyResult){ if($_1790245522->getProcess() === ___92244959(13)){  static::rewriteContextKey( $_2089814332->getContextName(), $_643351767, $_2089814332->getContextKey(), $_477739706->getCleanValue());} elseif($_1790245522->getProcess() === ___92244959(14)){ static::rewriteContextValue( $_2089814332->getContextName(), $_643351767, $_2089814332->getContextKey(), $_477739706->getCleanValue());} $this->logEvent( ___92244959(15), $_2089814332->getContextName(), $GLOBALS['____334932169'][4](___92244959(16), $_2089814332->getContextKey()));} elseif($_477739706 instanceof CheckResult &&!$_477739706->isSuccess()){ if($_477739706->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_2089814332->getContextName(), $_643351767, $_2089814332->getContextKey(),); $this->logEvent( ___92244959(17), $_2089814332->getContextName(), $GLOBALS['____334932169'][5](___92244959(18), $_2089814332->getContextKey()));} elseif($_477739706->getAction() === RuleAction::EXIT){ $this->logEvent( ___92244959(19), $_2089814332->getContextName(), $GLOBALS['____334932169'][6](___92244959(20), $_2089814332->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_2048387503= false;} protected function rewriteContextKey($_573148759, &$_643351767, $_2080153753, $_1486999590){ $_382489390= $_2080153753;  $GLOBALS['____334932169'][7]($_382489390); $_382489390[]= $_1486999590; if($_573148759 === ___92244959(21)){ $_1783562832= $GLOBALS['____334932169'][8]($_2080153753); $GLOBALS['____334932169'][9]($_382489390); if(empty($_2080153753)){ $GLOBALS[$_1486999590]= $GLOBALS[$_1783562832]; unset($GLOBALS[$_1783562832]);} else{ $_643351767=& $GLOBALS[$_1783562832]; $_1823728940= ArrayHelper::getByNestedKey($_643351767, $_2080153753);  ArrayHelper::setByNestedKey($_643351767, $_382489390, $_1823728940);  ArrayHelper::unsetByNestedKey($_643351767, $_2080153753);}} else{ $_1823728940= ArrayHelper::getByNestedKey($_643351767, $_2080153753);  ArrayHelper::setByNestedKey($_643351767, $_382489390, $_1823728940);  ArrayHelper::unsetByNestedKey($_643351767, $_2080153753);}} protected function rewriteContextValue($_573148759, &$_643351767, $_1056896020, $_1823728940){ if($_573148759 === 'global'){ $_1783562832= $GLOBALS['____334932169'][10]($_1056896020); if(empty($_1056896020)){ $GLOBALS[$_1783562832]= $_1823728940;} else{ $_643351767=& $GLOBALS[$_1783562832]; ArrayHelper::setByNestedKey($_643351767, $_1056896020, $_1823728940);}} else{  ArrayHelper::setByNestedKey($_643351767, $_1056896020, $_1823728940);}} protected function unsetContextValue($_573148759, &$_643351767, $_1056896020){ if($_573148759 === 'global'){ $_1783562832= $GLOBALS['____334932169'][11]($_1056896020); if(empty($_1056896020)){ unset($GLOBALS[$_1783562832]);} else{ $_643351767=& $GLOBALS[$_1783562832]; ArrayHelper::unsetByNestedKey($_643351767, $_1056896020);}} else{ ArrayHelper::unsetByNestedKey($_643351767, $_1056896020);}}  protected function recursiveContextKeyHandle(string $_573148759, array &$_643351767, array $_1931571752, Rule $_1790245522): array{  $_442650243=[]; foreach($_643351767 as $_786548662 => $_1823728940){ $_1056896020= $GLOBALS['____334932169'][12]($_1931571752,[$_786548662]); if($_1790245522->matchKey($_1056896020)){  if($_1790245522->getProcess() === ___92244959(22)){ $_477739706= $_1790245522->evaluate($_786548662);} elseif($_1790245522->getProcess() === ___92244959(23)){ $_477739706= $_1790245522->evaluateValue($_1823728940);}  if(!empty($_477739706) && $_477739706 instanceof RuleResult){ $_442650243[]= new HandlingResult($_573148759, $_1056896020, $_477739706, $_1790245522);}}  if($GLOBALS['____334932169'][13]($_1823728940)){ $_442650243= $GLOBALS['____334932169'][14]($_442650243, $this->recursiveContextKeyHandle( $_573148759, $_643351767[$_786548662], $_1056896020, $_1790245522));}} return $_442650243;} protected function getContextElements(array $_117210723){ $_199690942=[]; if($GLOBALS['____334932169'][15](___92244959(24), $_117210723, true)){ $_199690942[___92244959(25)]= &$_GET;} if($GLOBALS['____334932169'][16](___92244959(26), $_117210723, true)){ $_199690942[___92244959(27)]= &$_POST;} if($GLOBALS['____334932169'][17](___92244959(28), $_117210723, true)){ $_199690942[___92244959(29)]= &$_COOKIE;} if($GLOBALS['____334932169'][18](___92244959(30), $_117210723, true)){ $_199690942[___92244959(31)]= &$_REQUEST;} if($GLOBALS['____334932169'][19](___92244959(32), $_117210723, true)){ $_199690942[___92244959(33)]= $GLOBALS;} return $_199690942;} public static function refreshRules(){ try{ $_1823975778= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____334932169'][20]()- $_1823975778)< static::CACHE_RULES_TTL){ return;} Option::set(___92244959(34), ___92244959(35), $GLOBALS['____334932169'][21]()); $_217844541= null;  $_440047934= $GLOBALS['____334932169'][22](function($_1038588540){ return[___92244959(36) => $_1038588540[___92244959(37)], ___92244959(38) => (int) $_1038588540[___92244959(39)]];}, ModuleManager::getModulesFromDisk());  $_1549363344=[]; foreach($GLOBALS['____334932169'][23]() as $_1422908267){ $_1346991569= new ReflectionExtension($_1422908267); $_1549363344[$_1422908267]=[ ___92244959(40) => $_1346991569->getVersion(), ___92244959(41) => $_1346991569->getINIEntries()];}  $_853791147= new HttpClient([ ___92244959(42) => round(0+2.5+2.5), ___92244959(43) => round(0+5)]); $_1313568335= $_853791147->post( static::$_3793224,[ 'modules' => $GLOBALS['____334932169'][24]($_440047934), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey(), 'php' => $GLOBALS['____334932169'][25]([ 'v' => $GLOBALS['____334932169'][26](), 'ext' => $_1549363344]),]); if($_853791147->getStatus() == round(0+100+100) &&!empty($_1313568335)){ $_217844541= Json::decode($_1313568335);}  if($_217844541 !== null){ $_1077925111= Application::getConnection(); $_1572999710= RuleRecordTable::getTableName(); if(!empty($_217844541)){ foreach($_217844541 as $_384442482){ if(!static::checkRuleSign($_384442482)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____334932169'][27]($_384442482));}}}  $_1077925111->truncateTable($_1572999710);  if(!empty($_217844541)){ $_1768443333=[]; foreach($_217844541 as $_384442482){ $_1768443333[]= ___92244959(44). $_1077925111->getSqlHelper()->forSql($_384442482[___92244959(45)]). ___92244959(46). $_1077925111->getSqlHelper()->forSql($_384442482[___92244959(47)]). ___92244959(48). $_1077925111->getSqlHelper()->forSql($_384442482[___92244959(49)]). ___92244959(50);} $_1904769036= $GLOBALS['____334932169'][28](___92244959(51), $_1768443333);  $_1077925111->query("INSERT INTO {$_1572999710} (DATA, MODULE, MODULE_VERSION) VALUES {$_1904769036}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_1141673979){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___92244959(52), ___92244959(53), ___92244959(54), ___92244959(55). $_1141673979->getMessage(). ___92244959(56). $_1141673979->getTraceAsString());}} protected static function checkRuleSign($_1790245522){ $_1776871658= new PublicKeyCipher; $_1073986659= $_1776871658->decrypt($_1790245522[___92244959(57)], static::__1092787086()); return str_starts_with($_1073986659, ___92244959(58));} private static function __1092787086(){ $_2101074582= ''; $_2101074582 .= ___92244959(59); $_2101074582 .= ___92244959(60); return $_2101074582;} protected function logEvent($_1235819088, $_175414433, $_289994498){ if($this->_2048387503){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_1235819088, 'main', $_175414433, $_289994498);}}}?>